package com.fb2devs.slopsitebackend.model;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonManagedReference;

@Entity //this marks our class as a JPA (our ORM) entity
@Table(name = "students")
public class Student {

    @Id //marks as primary key of entity
    @GeneratedValue(strategy = GenerationType.IDENTITY) //indicating this value is generated by db IDENTITY column
    private Integer id;

    @Column(nullable = false, unique = true)
    private String username;

    @Column(nullable = false)
    private String password;

    @Column(nullable = false)
    private String name;

    // Bi-directional link to Enrollment
    @OneToMany(
        mappedBy = "student",
        fetch = FetchType.EAGER,
        cascade = CascadeType.ALL,
        orphanRemoval = true
    )
    @JsonManagedReference("student-enrollments")
    private List<Enrollment> enrollments = new ArrayList<>();

    // default constructor required by JPA
    public Student() {}

    // constructor w/ fields
    public Student(String username, String password, String name) {
        this.username = username;
        this.password = password;
        this.name = name;
    }

    public Integer getId() {
        return id;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public List<Enrollment> getEnrollments() {
        return enrollments;
    }

    public void printEnrollments() {
        System.out.println("Enrollments for student: " + this.name);
        for (Enrollment enrollment : this.enrollments) {
            enrollment.printEnrollment();
        }
    }

    public void setEnrollments(List<Enrollment> enrollments) {
        this.enrollments = enrollments;
    }

    // Optional: convenience method to sync both sides of relationship
    public void addEnrollment(Enrollment enrollment) {
        enrollments.add(enrollment);
        enrollment.setStudent(this);
    }

    public void removeEnrollment(Enrollment enrollment) {
        enrollments.remove(enrollment);
        enrollment.setStudent(null);
    }
}
