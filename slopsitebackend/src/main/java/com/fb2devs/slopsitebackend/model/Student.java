package com.fb2devs.slopsitebackend.model; 

import jakarta.persistence.*;

@Entity //this marks our class as a JPA (our ORM) entity
@Table(name="students")
public class Student {
  @Id //marks as primary key of entity
  @GeneratedValue(strategy = GenerationType.IDENTITY) //indicating this value is generated by db IDENTITY column
  private Long id;

  @Column(nullable = false, unique = true)
  private String username;

  @Column(nullable = false)
  private String password;

  @Column(nullable = false)
  private String name;

  // default constructor required by JPA
  public Student() {
  }

  // constructor w/ fields
  public Student(String username, String password, String name) {
    this.username = username;
    this.password = password;
    this.name = name;
  }

  // NOTE -> Cumming back to da gettas and settas since: 
    // I can't link Student - Enrollment - Course until other entities exist
    // Bi-Direction mapping(ex @OneToMany) requires refers other entities
    // Risk circular imports or bad design if you guess to early
    // Test persistance across multiple entities -> examples ->
      // Save a Course with a Teacher	Is teacher_id handled correctly?
      // Save a Student and Enrollment	Does the join table persist both foreign keys?
      // Fetch Course and get List<Enrollment>	Are bi-directional mappings set up right?
      // Delete a Course	Do enrollments delete with it if ON DELETE CASCADE?
        
}



// poop bro
// override stuff???
// look at Trae chat
//chatgpt name - mainchat4slopsite
